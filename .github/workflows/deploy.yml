name: CI/CD
on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_BOT: ${{ github.repository }}-bot
      IMAGE_WORKER: ${{ github.repository }}-worker
      IMAGE_PROMPT: ${{ github.repository }}-prompt
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Check dependencies
        run: |
          go mod tidy
          go mod verify
          git diff --exit-code
      - name: Run tests
        run: make test

      - name: Build Docker images
        run: |
          docker build -f deploy/Dockerfile.bot -t $REGISTRY/$IMAGE_BOT:${{ github.sha }} .
          docker build -f deploy/Dockerfile.worker -t $REGISTRY/$IMAGE_WORKER:${{ github.sha }} .
          docker build -f deploy/Dockerfile.prompt -t $REGISTRY/$IMAGE_PROMPT:${{ github.sha }} .

      - name: Push to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          docker push $REGISTRY/$IMAGE_BOT:${{ github.sha }}
          docker push $REGISTRY/$IMAGE_WORKER:${{ github.sha }}
          docker push $REGISTRY/$IMAGE_PROMPT:${{ github.sha }}

      - name: Read secrets from Vault
        uses: hashicorp/vault-action@v2
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/legalbot SERVER_IP;
            secret/data/legalbot SERVER_SSH_KEY;

      - name: Deploy via SSH & docker compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.SERVER_IP }}
          username: deploy
          key: ${{ env.SERVER_SSH_KEY }}
          script: |
            cd /opt/legalbot
            docker pull $REGISTRY/$IMAGE_BOT:${{ github.sha }}
            docker pull $REGISTRY/$IMAGE_WORKER:${{ github.sha }}
            docker pull $REGISTRY/$IMAGE_PROMPT:${{ github.sha }}
            IMAGE_TAG=${{ github.sha }} docker compose up -d bot worker prompt
